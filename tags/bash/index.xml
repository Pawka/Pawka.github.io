<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bash on Pawka&#39;s diary</title>
    <link>https://pawka.notrollsallowed.com/tags/bash/</link>
    <description>Recent content in bash on Pawka&#39;s diary</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 01 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://pawka.notrollsallowed.com/tags/bash/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TIL: tail log until process exit</title>
      <link>https://pawka.notrollsallowed.com/posts/2023-04-01/</link>
      <pubDate>Sat, 01 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://pawka.notrollsallowed.com/posts/2023-04-01/</guid>
      <description>:til: :bash:
The --pid flag for tail command can be used to run tail untill particular process exits. It works with -f flag only. Example:
tail --pid &amp;lt;process_id&amp;gt; -f &amp;lt;file.txt&amp;gt; I have been in situation when particular tool was able to write contents to file only but not stdout. Of course it was possible to provide /dev/stdout instead of file but then piping started to fail with &amp;ldquo;Permission denied&amp;rdquo; error. I&amp;rsquo;ve solved problem in a such way:</description>
    </item>
    
    <item>
      <title>TIL: Call bash function via xargs</title>
      <link>https://pawka.notrollsallowed.com/posts/2021-03-05/</link>
      <pubDate>Fri, 05 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pawka.notrollsallowed.com/posts/2021-03-05/</guid>
      <description>:til: :cli: :bash:
To run cli tools there is xargs. But what if I want to run certain part of bash script (a function) in parallel? One option is to extract function to a separate file and feed it into xargs. Another way - make xargs to execute the function:
#!/bin/bash p() { echo &amp;#34;&amp;gt; $1&amp;#34; } main() { export -f p seq 10 | xargs -n 1 -I {} bash -c &amp;#34;p {}&amp;#34; } main &amp;#34;@$&amp;#34; Necesary line here is to export the function via export -f &amp;lt;function_name&amp;gt;.</description>
    </item>
    
  </channel>
</rss>
