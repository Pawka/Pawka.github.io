<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vim on Pawka&#39;s diary</title>
    <link>https://pawka.notrollsallowed.com/tags/vim/</link>
    <description>Recent content in Vim on Pawka&#39;s diary</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 31 Aug 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://pawka.notrollsallowed.com/tags/vim/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TIL: Open URL in VIM</title>
      <link>https://pawka.notrollsallowed.com/posts/2022-08-31/</link>
      <pubDate>Wed, 31 Aug 2022 00:00:00 +0000</pubDate>
      <guid>https://pawka.notrollsallowed.com/posts/2022-08-31/</guid>
      <description>&lt;p&gt;:til: :vim:&lt;/p&gt;&#xA;&lt;p&gt;Move cursor on the URL and type &lt;code&gt;gx&lt;/code&gt; to open the URL in browser.&lt;/p&gt;&#xA;&lt;p&gt;The &lt;code&gt;gx&lt;/code&gt; actually calls &lt;code&gt;open&lt;/code&gt; or OS equivalent command for given resource (it&#xA;can be URL, image, other type of file). Then &lt;code&gt;open&lt;/code&gt; command decides what to do&#xA;with the object, e.g. if it is URL - open it in a browser.&lt;/p&gt;&#xA;&lt;p&gt;I often use VIM to format text, e.g. generate multiple URLs and wanted to open&#xA;all of them in a browser. This can be done via macro e.g. &lt;code&gt;qegxj&lt;/code&gt; will record&#xA;macro &lt;code&gt;e&lt;/code&gt; to run &lt;code&gt;gx&lt;/code&gt; and go one line bellow. Then simply executing macro for&#xA;each line opens all urls e.g.: &lt;code&gt;100@e&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>TIL: Replace string across multiple files in VIM</title>
      <link>https://pawka.notrollsallowed.com/posts/2021-03-16/</link>
      <pubDate>Tue, 16 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://pawka.notrollsallowed.com/posts/2021-03-16/</guid>
      <description>&lt;p&gt;:til: :vim:&lt;/p&gt;&#xA;&lt;p&gt;Only files which are in currently opened buffers are affected. Buffers can be&#xA;populated in many ways what is out of scope of this post.&lt;/p&gt;&#xA;&lt;p&gt;Replace &lt;code&gt;what&lt;/code&gt; to &lt;code&gt;result&lt;/code&gt; in all currently opened buffers:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;:bufdo %s/what/result/g&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Write changes written to the disk:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;:bufdo w&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Vimwiki dienoraščio perkėlimas į Github Pages naudojant Hugo</title>
      <link>https://pawka.notrollsallowed.com/posts/2020-10-28/</link>
      <pubDate>Wed, 28 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://pawka.notrollsallowed.com/posts/2020-10-28/</guid>
      <description>&lt;p&gt;:vim: :blog:&lt;/p&gt;&#xA;&lt;p&gt;Šita idėja galvoje sukosi jau seniai. Teksto redagavimui naudoju VIM. Ilgai&#xA;ieškojau įrankio, kuris būtų patogus užrašams. Naudojau Evernote, Synology&#xA;Notes, vim oultiner, vim notes, kol galiausiai apsistojau prie vimwiki. Vimwiki&#xA;turiu dvi atskiras kolekcijas - vieną darbui, o kitą asmeniniams užrašams.&#xA;Tekstą rašau Markdown formatu. Tuo pačiu vimwiki turi dienoraščio funkciją, kuri&#xA;tiesiog sukuria naują failą, skritą įrašams, su dienos data ir generuoja&#xA;indeksinį puslapį, kuriame saugomos nuorodos į visus šiuos failus. Paprasta ir&#xA;patogu.&lt;/p&gt;</description>
    </item>
    <item>
      <title>TIL: Delete lines matching pattern in VIM</title>
      <link>https://pawka.notrollsallowed.com/posts/2020-06-15/</link>
      <pubDate>Mon, 15 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://pawka.notrollsallowed.com/posts/2020-06-15/</guid>
      <description>&lt;p&gt;:til: :vim:&lt;/p&gt;&#xA;&lt;p&gt;To remove lines of oppened file which contains the &lt;code&gt;pattern&lt;/code&gt; run following&#xA;command:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;:g/pattern/d&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;code&gt;g!&lt;/code&gt; can be used to remove lines which do not match the pattern:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;:g!/pattern/d&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;g!&lt;/code&gt; is the same as &lt;code&gt;v&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;:v/pattern/d&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Source: &lt;a href=&#34;https://vim.fandom.com/wiki/Delete_all_lines_containing_a_pattern&#34;&gt;https://vim.fandom.com/wiki/Delete_all_lines_containing_a_pattern&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Asmeninis puslapis naudojant Vimwiki</title>
      <link>https://pawka.notrollsallowed.com/posts/2020-04-20/</link>
      <pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://pawka.notrollsallowed.com/posts/2020-04-20/</guid>
      <description>&lt;p&gt;:vim: :blog:&lt;/p&gt;&#xA;&lt;p&gt;Jau kurį laiką galvoju apie asmeninį puslapį, kuriam atnaujint pakaktų išsaugoti&#xA;tekstą Markdown formatu. Vartotojui neturėtų rūpėti:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Kaip ir kur prisijungti&lt;/li&gt;&#xA;&lt;li&gt;Koks prisijungimo slaptažodis&lt;/li&gt;&#xA;&lt;li&gt;Puslapio sistemos atnaujinimai&lt;/li&gt;&#xA;&lt;li&gt;Ar yra prisijungimas prie interneto&lt;/li&gt;&#xA;&lt;li&gt;Naršyklės paleidimas&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Idealiu atveju šovus idėjai apie ką rašyt - pakaktų redaktoriuje sukurti irašą&#xA;ir jį išsaugoti. Baigus rašyti - toliau testi programavimo darbus.&lt;/p&gt;&#xA;&lt;p&gt;Išsaugojus straipsnį kodas (tekstas) turėtų būti išsaugomas kodo versijavimo&#xA;sistemoje, sukeliamas į repozitoriją, sugeneruojamas statinis HTML ir&#xA;atnaujinamas puslapis. Daugiau nieko. Viskas vyksta automatiškai be vartotojo&#xA;įsikišimo. Tiesa, kartais netyčia įkėlus jautrią informaciją taip galima&#xA;išpublikuoti ją visiems. Tokiu atveju pravartu susikonfigūruoti kelis git&#xA;hook&amp;rsquo;us, kurie neleistų saugoti bent jau slaptažodžių ir raktų. Taip pat&#xA;publikavimas galėtų būti rankinis vykdant &lt;code&gt;git push&lt;/code&gt; komandą.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
